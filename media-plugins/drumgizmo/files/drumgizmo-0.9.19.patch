--- a/src/translation.cc	2020-11-22 13:30:31.000000000 +0300
+++ b/src/translation.cc	2022-03-12 00:35:50.695064691 +0300
@@ -43,7 +43,7 @@
 
 namespace
 {
-using Text = std::pair<std::uint64_t, std::string>;
+using Text = std::pair<std::wint_t, std::string>;
 using Texts = std::vector<Text>;
 
 struct
@@ -131,13 +131,13 @@
 	//               ...                                    ...
 	//              |                                          |
 	//              +------------------------------------------+
-	constexpr std::uint32_t magic_number_le = 0x950412de;
-	constexpr std::uint32_t magic_number_be = 0xde120495;
+	constexpr std::wint_t magic_number_le = 0x950412de;
+	constexpr std::wint_t magic_number_be = 0xde120495;
 
 	const char* ptr = catalog;
 
 	// Verify magic number
-	std::uint32_t magic_number = *reinterpret_cast<const std::uint32_t*>(ptr);
+	std::wint_t magic_number = *reinterpret_cast<const std::wint_t*>(ptr);
 	if(magic_number != magic_number_le && magic_number != magic_number_be)
 	{
 		// Error - bad magic number
@@ -146,8 +146,8 @@
 	ptr += sizeof(magic_number);
 
 	// Verify file format revision
-	std::uint32_t file_format_revision =
-		*reinterpret_cast<const std::uint32_t*>(ptr);
+	std::wint_t file_format_revision =
+		*reinterpret_cast<const std::wint_t*>(ptr);
 	if(file_format_revision != 0)
 	{
 		// Error - bad file format revision
@@ -156,58 +156,58 @@
 	ptr += sizeof(file_format_revision);
 
 	// Read number of string in the catalog
-	std::uint32_t number_of_strings =
-		*reinterpret_cast<const std::uint32_t*>(ptr);
+	std::wint_t number_of_strings =
+		*reinterpret_cast<const std::wint_t*>(ptr);
 	ptr += sizeof(number_of_strings);
 
 	// Read orig_table_offset
-	std::uint32_t orig_table_offset =
-		*reinterpret_cast<const std::uint32_t*>(ptr);
+	std::wint_t orig_table_offset =
+		*reinterpret_cast<const std::wint_t*>(ptr);
 	ptr += sizeof(orig_table_offset);
 
 	// Read transl_table_offset
-	std::uint32_t transl_table_offset =
-		*reinterpret_cast<const std::uint32_t*>(ptr);
+	std::wint_t transl_table_offset =
+		*reinterpret_cast<const std::wint_t*>(ptr);
 	ptr += sizeof(transl_table_offset);
 
 	// Read hash_table_size
-	std::uint32_t hash_table_size =
-		*reinterpret_cast<const std::uint32_t*>(ptr);
+	std::wint_t hash_table_size =
+		*reinterpret_cast<const std::wint_t*>(ptr);
 	ptr += sizeof(hash_table_size);
 
 	// Read hash_table_offset
-	std::uint32_t hash_table_offset =
-		*reinterpret_cast<const std::uint32_t*>(ptr);
+	std::wint_t hash_table_offset =
+		*reinterpret_cast<const std::wint_t*>(ptr);
 	ptr += sizeof(hash_table_offset);
 
 
 	// Read original/translated string tables:
 	const char* orig_ptr = catalog + orig_table_offset;
 	const char* transl_ptr = catalog + transl_table_offset;
-	for(std::uint32_t string_index = 0;
+	for(std::wint_t string_index = 0;
 	    string_index < number_of_strings; ++string_index)
 	{
 		// Read string_length
-		std::uint32_t orig_string_length =
-			*reinterpret_cast<const std::uint32_t*>(orig_ptr);
+		std::wint_t orig_string_length =
+			*reinterpret_cast<const std::wint_t*>(orig_ptr);
 		orig_ptr += sizeof(orig_string_length);
 
 		// Read string_offset
-		std::uint32_t orig_string_offset =
-			*reinterpret_cast<const std::uint32_t*>(orig_ptr);
+		std::wint_t orig_string_offset =
+			*reinterpret_cast<const std::wint_t*>(orig_ptr);
 		orig_ptr += sizeof(orig_string_offset);
 
 		std::string orig;
 		orig.append(catalog + orig_string_offset, orig_string_length);
 
 		// Read string_length
-		std::uint32_t transl_string_length =
-			*reinterpret_cast<const std::uint32_t*>(transl_ptr);
+		std::wint_t transl_string_length =
+			*reinterpret_cast<const std::wint_t*>(transl_ptr);
 		transl_ptr += sizeof(transl_string_length);
 
 		// Read string_offset
-		std::uint32_t transl_string_offset =
-			*reinterpret_cast<const std::uint32_t*>(transl_ptr);
+		std::wint_t transl_string_offset =
+			*reinterpret_cast<const std::wint_t*>(transl_ptr);
 		transl_ptr += sizeof(transl_string_offset);
 
 		std::string transl;
@@ -226,7 +226,7 @@
 	return true;
 }
 
-const char* Translation::gettext(std::uint64_t msgid, const char* original)
+const char* Translation::gettext(std::wint_t msgid, const char* original)
 {
 	std::lock_guard<std::mutex>(singleton.mutex);
 	if(singleton.refcnt == 0)
--- a/src/translation.h	2020-11-22 13:30:31.000000000 +0300
+++ b/src/translation.h	2022-03-12 00:36:02.688432307 +0300
@@ -32,7 +32,7 @@

 #include <memory>

-std::uint64_t constexpr const_hash(const char* input)
+std::wint_t constexpr const_hash(const char* input)
 {
 	return *input ?
 		static_cast<unsigned int>(*input) + 33 * const_hash(input + 1) :
@@ -49,7 +49,7 @@

 	bool load(const char* catalog, std::size_t size);

-	static const char* gettext(std::uint64_t msgid, const char* original);
+	static const char* gettext(std::wint_t msgid, const char* original);
 	static std::string getISO639LanguageName();
 };
